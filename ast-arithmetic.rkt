#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.9 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 443 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 0 1 #"\0"
0 75 17 #"PragmataPro Mono\0"
0.0 30 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 56 136 168 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 51 51 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 153 153 153
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 51 51 51 238
238 238 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 119 119 119
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 34 34 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 51 51 51 254
192 203 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 36 36 140
255 255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 34 139 34
255 255 255 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 0 1 #"\0"
0 75 17 #"PragmataPro Mono\0"
0.0 32 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 17 #"PragmataPro Mono\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 17 #"PragmataPro Mono\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 158 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 211 72 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 211 72 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 150 255 0
0 0 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 173
216 230 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 173
216 230 -1 -1 0 1 #"\0"
0 75 17 #"PragmataPro Mono\0"
0.0 28 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 173
216 230 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 173
216 230 -1 -1 0 1 #"\0"
0 75 12 #"Inconsolata\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 176 48 96 0
0 0 -1 -1 2 38 #"drscheme:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 28 #"drscheme:check-syntax:set!d\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 31 #"drscheme:check-syntax:imported\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 8 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 8 24 #"drscheme:text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 173
216 230 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 173
216 230 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 173
216 230 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 173
216 230 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 48 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Inconsolata\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 31 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 37 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 37 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 173
216 230 -1 -1 37 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 31 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 28 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 41 #"profj:syntax-colors:scheme:block-comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 35 #"profj:syntax-colors:scheme:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 37 #"profj:syntax-colors:scheme:prim-type\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 38 #"profj:syntax-colors:scheme:identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 34 #"profj:syntax-colors:scheme:string\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 35 #"profj:syntax-colors:scheme:literal\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 35 #"profj:syntax-colors:scheme:comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 33 #"profj:syntax-colors:scheme:error\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 35 #"profj:syntax-colors:scheme:default\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"profj:syntax-colors:scheme:uncovered\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 35 #"profj:syntax-colors:scheme:covered\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 14 #"Html Standard\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 40 #"framework:syntax-coloring:scheme:symbol\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 41 #"framework:syntax-coloring:scheme:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 41 #"framework:syntax-coloring:scheme:comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 40 #"framework:syntax-coloring:scheme:string\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 42 #"framework:syntax-coloring:scheme:constant\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 45 #"framework:syntax-coloring:scheme:parenthesis\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 39 #"framework:syntax-coloring:scheme:error\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 39 #"framework:syntax-coloring:scheme:other\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 49 #"drscheme:check-syntax:lexically-bound-identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 42 #"drscheme:check-syntax:imported-identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 37 #"profj:syntax-coloring:scheme:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 39 #"profj:syntax-coloring:scheme:prim-type\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 40 #"profj:syntax-coloring:scheme:identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 36 #"profj:syntax-coloring:scheme:string\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 37 #"profj:syntax-coloring:scheme:literal\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 37 #"profj:syntax-coloring:scheme:comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 35 #"profj:syntax-coloring:scheme:error\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 37 #"profj:syntax-coloring:scheme:default\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 39 #"profj:syntax-coloring:scheme:uncovered\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"profj:syntax-coloring:scheme:covered\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 201 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 196 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 200 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 200 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 197 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 201 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 196 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 198 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 201 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 197 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 196 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 200 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 194 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 194 1 #"\0"
0 70 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 194 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 194 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 194 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 194 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 194 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 194 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 199 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 197 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 199 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 199 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 198 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 198 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 198 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 194 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 194 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 194 1 #"\0"
0 70 1 #"\0"
1.2 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 194 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 194 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 94 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 202 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 202 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 202 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 202 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 199 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 200 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 4 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 194 1 #"\0"
0 70 1 #"\0"
1.0 -1 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 194 1 #"\0"
0 -1 1 #"\0"
1.0 -1 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 194 1 #"\0"
0 70 1 #"\0"
1.0 -1 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 205 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 204 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 204 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 205 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 203 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 203 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 28 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 28 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 17 #"PragmataPro Mono\0"
0.0 21 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 17 #"PragmataPro Mono\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"PragmataPro\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 70 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 163 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 192 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 240 230 140
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 60 194 57 0
0 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 174 51 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
255 255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"PragmataPro\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"PragmataPro\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"PragmataPro\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"PragmataPro\0"
0.0 21 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"PragmataPro\0"
0.0 24 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 16 #"Source Code Pro\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Inconsolata\0"
0.0 19 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 158 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"PragmataPro\0"
0.0 25 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"PragmataPro\0"
0.0 19 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"PragmataPro\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"PragmataPro\0"
0.0 22 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 70 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"PragmataPro\0"
0.0 26 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 128 192 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 192
0 0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 10 #"Fira Code\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 17 #"PragmataPro Mono\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 17 #"PragmataPro Mono\0"
0.0 24 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 17 #"PragmataPro Mono\0"
0.0 22 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 141 85 22 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 17 #"PragmataPro Mono\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Iosevka\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 192 192
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 128
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 191 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 128 64 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 192 192
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 191 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 236 0 255 0
0 0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 14 91 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 17 #"PragmataPro Mono\0"
0.0 37 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 17 #"PragmataPro Mono\0"
0.0 29 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 17 #"PragmataPro Mono\0"
0.0 26 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 17 #"PragmataPro Mono\0"
0.0 25 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
0 0 0 1 #"\0"
0 70 1 #"\0"
0.0 0 90 90 90 90 0 0 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0 0
0 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 0 1 #"\0"
0 75 17 #"PragmataPro Mono\0"
0.0 19 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 119 34 119 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 204 221 170
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 144 179 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 204 204
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 119 34 0
0 0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 37 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0
0 0 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 217 130 34 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 403 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 403 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 169 169
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 184 134 11 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 250 128 114
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 160 32 240 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 0 130 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 139 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 47 79 79 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 70 130 180 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 100 149 237
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 107 142 35 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 403 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 16 #"Source Code Pro\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 10 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 10 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 110 84 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 230 96 62 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 200 142
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 222 140
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 48 16 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 110 84 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 110 84 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 70 194 209 0
0 0 -1 -1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1           0 945 0 4 3 94
(4
 #";; Die ersten drei Zeilen dieser Datei wurden von DrRacket eingef\xC3"
 #"\xBCgt. Sie enthalten Metadaten"
) 0 0 4 29 1 #"\n"
0 0 4 3 83
(5
 #";; \xC3\xBCber die Sprachebene dieser Datei in einer Form, die DrRack"
 #"et verarbeiten kann."
) 0 0 4 29 1 #"\n"
0 0 4 3 289
(6
 #"#reader(lib \"DMdA-vanilla-reader.ss\" \"deinprogramm\")((modname ast"
 #"-arithmetic) (read-case-sensitive #f) (teachpacks ((lib \"image2.rkt"
 #"\" \"teachpack\" \"deinprogramm\"))) (deinprogramm-settings #(#f writ"
 #"e repeating-decimal #t #t none explicit #f ((lib \"image2.rkt\" \"tea"
 #"chpack\" \"deinprogramm\")))))"
) 0 0 4 29 1 #"\n"
0 0 17 3 19 #"; Eine Zahl besitzt"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; - einen Wert (value)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"make-num"
0 0 24 3 2 #" ("
0 0 14 3 6 #"number"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 9 #"num-value"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 24 #"define-record-procedures"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 3 #"num"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 8 #"make-num"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 4 #"num?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"num-value"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; Eine Variable besitzt"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; - einen Namen (name)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"make-var"
0 0 24 3 2 #" ("
0 0 14 3 6 #"string"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"var-name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 6 #"string"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 24 #"define-record-procedures"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 3 #"var"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 8 #"make-var"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 4 #"var?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"var-name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; Un\303\244re Operatoren"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"unoper"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"signature"
0 0 24 3 2 #" ("
0 0 14 3 6 #"one-of"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"-\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"\342\210\232\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; Eine un\303\244re Operation (unop) besitzt"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; - einen un\303\244ren Operator (operator),"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; - einen Operanden (operand)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 9 #"make-unop"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unoper"
0 0 24 3 1 #" "
0 0 14 3 4 #"term"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"unop"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 13 #"unop-operator"
0 0 24 3 2 #" ("
0 0 14 3 4 #"unop"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 6 #"unoper"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 12 #"unop-operand"
0 0 24 3 2 #" ("
0 0 14 3 4 #"unop"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"term"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 24 #"define-record-procedures"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 4 #"unop"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 9 #"make-unop"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 5 #"unop?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"unop-operator"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 12 #"unop-operand"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; Bin\303\244re Operatoren"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"binoper"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"signature"
0 0 24 3 2 #" ("
0 0 14 3 6 #"one-of"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"+\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"-\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"*\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"/\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"^\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; Eine bin\303\244re Operation (binop) besitzt"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; - einen bin\303\244ren Operator (operator),"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; - einen linken Operanden (left-operand),"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; - einen rechten Operanden (right-perand)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 10 #"make-binop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"binoper"
0 0 24 3 1 #" "
0 0 14 3 4 #"term"
0 0 24 3 1 #" "
0 0 14 3 4 #"term"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 5 #"binop"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 14 #"binop-operator"
0 0 24 3 2 #" ("
0 0 14 3 5 #"binop"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 7 #"binoper"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 18 #"binop-left-operand"
0 0 24 3 2 #" ("
0 0 14 3 5 #"binop"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"term"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 19 #"binop-right-operand"
0 0 24 3 2 #" ("
0 0 14 3 5 #"binop"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"term"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 24 #"define-record-procedures"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 5 #"binop"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 10 #"make-binop"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 6 #"binop?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"binop-operator"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 18 #"binop-left-operand"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 19 #"binop-right-operand"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 67
(7
 #"; Signatur f\xC3\xBCr arithmetische Ausdr\xC3\xBCcke. Ein Ausdruck is"
 #"t entweder"
) 0 0 24 29 1 #"\n"
0 0 17 3 14 #"; - eine Zahl,"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; - eine Variable,"
0 0 24 29 1 #"\n"
0 0 17 3 62
#"; - ein un\303\244rer Operator mit einem Ausdruck als Argument, oder"
0 0 24 29 1 #"\n"
0 0 17 3 60
(8
 #"; - ein bin\xC3\xA4rer Operator mit zwei Ausdr\xC3\xBCcken als Argume"
 #"nte"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"term"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"signature"
0 0 24 3 2 #" ("
0 0 14 3 5 #"mixed"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 4 #"unop"
0 0 24 3 1 #" "
0 0 14 3 5 #"binop"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; Beispielterm: 2 * -a"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"term1"
0 0 24 3 1 #" "
0 0 14 3 4 #"term"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"term1"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-binop"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"*\""
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-num"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-unop"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"-\""
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 8 #"make-var"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; Beispielterm: (4 * 10 + 2) / (a - (1 + a))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"term2"
0 0 24 3 1 #" "
0 0 14 3 4 #"term"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"term2-left"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-binop"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"+\""
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-binop"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"*\""
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-num"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-num"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-num"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"term2-right"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-binop"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"-\""
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-var"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-binop"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"+\""
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-num"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-var"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"term2"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-binop"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"/\""
0 0 24 3 1 #" "
0 0 14 3 10 #"term2-left"
0 0 24 3 1 #" "
0 0 14 3 11 #"term2-right"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; Parametrisch-polymorphe 2-Tupel"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 10 #"make-tuple"
0 0 24 3 2 #" ("
0 0 14 3 2 #"%a"
0 0 24 3 1 #" "
0 0 14 3 2 #"%b"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 2 #" ("
0 0 14 3 8 #"tuple-of"
0 0 24 3 1 #" "
0 0 14 3 2 #"%a"
0 0 24 3 1 #" "
0 0 14 3 2 #"%b"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 11 #"tuple-first"
0 0 24 3 4 #"  (("
0 0 14 3 8 #"tuple-of"
0 0 24 3 1 #" "
0 0 14 3 2 #"%a"
0 0 24 3 1 #" "
0 0 14 3 2 #"%b"
0 0 24 3 2 #") "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 2 #"%a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 12 #"tuple-second"
0 0 24 3 3 #" (("
0 0 14 3 8 #"tuple-of"
0 0 24 3 1 #" "
0 0 14 3 2 #"%a"
0 0 24 3 1 #" "
0 0 14 3 2 #"%b"
0 0 24 3 2 #") "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 2 #"%b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 35 #"define-record-procedures-parametric"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 5 #"tuple"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 8 #"tuple-of"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 10 #"make-tuple"
0 0 24 3 1 #" "
0 0 14 3 6 #"tuple?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"tuple-first"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 12 #"tuple-second"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; Ein maybe-Wert der Signatur t ist entweder"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; - ein Wert der Sinatur t, oder"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; - #f (kein Wert der Signatur t)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"maybe-of"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"signature"
0 0 24 3 2 #" ("
0 0 14 3 5 #"mixed"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #" ("
0 0 14 3 6 #"one-of"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(9
 #"; Eine Variablenumgebung ist eine Liste von Tupeln, welche Variablenn"
 #"amen"
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #"; konkrete Zahlenwerte zuordnen"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"environment"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"signature"
0 0 24 3 2 #" ("
0 0 14 3 7 #"list-of"
0 0 24 3 2 #" ("
0 0 14 3 8 #"tuple-of"
0 0 24 3 1 #" "
0 0 14 3 6 #"string"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; Beispielumgebung, die a=7 und b=42 zuweist"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 4 #"env1"
0 0 24 3 1 #" "
0 0 14 3 11 #"environment"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"env1"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-tuple"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-tuple"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 24 3 1 #" "
0 0 21 3 2 #"42"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 90
(10
 #"; Entspricht ein String einem Zahlenwert (d.h. enth\xC3\xA4lt er nur "
 #"Zahlen oder Dezimalpunkte)?"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 19 #"num-value-fragment?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"string"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 7 #"boolean"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"num-value-fragment?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"fold"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\".\""
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 9 #"string<=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 9 #"string>=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"9\""
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 20 #"string->strings-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 74
(11
 #"; Ist ein String ein Variablenname (d.h. enth\xC3\xA4lt er nur Kleinb"
 #"uchstaben)?"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 18 #"var-name-fragment?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"string"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 7 #"boolean"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"var-name-fragment?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"fold"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 2 #" ("
0 0 14 3 9 #"string<=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 9 #"string>=?"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 20 #"string->strings-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 76
(12
 #"; Parser: Wandelt einen menschenlesbaren Ausdruck in einen AST um (ka"
 #"nnst du"
) 0 0 24 29 1 #"\n"
0 0 17 3 33 #"; ignorieren, deswegen versteckt)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 10 #"term-parse"
0 0 24 3 2 #" ("
0 0 14 3 6 #"string"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"term"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 10         222 21 2 #"(\0"
2 #")\0"
43 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #"d"
7 #"wxtext\0"
3 5 #"efine"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 10 #"term-parse"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 6 #"lambda"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"add-parser"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"lexer"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 20 #"string->strings-list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"s"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"      (("
7 #"wxtext\0"
3 10 #"make-tuple"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"t"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 1 #"t"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 1 #"_"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"violation"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 80
(13
 #"\"parse error: trailing characters, you probably forgot some opening "
 #"parentheses\""
) 7 #"wxtext\0"
3 5 #")))))"
0 10         107 21 2 #"(\0"
2 #")\0"
20 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 4 #"exer"
7 #"wxtext\0"
3 3 #" (("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 2 #"->"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 3 #")))"
0 10         702 21 2 #"(\0"
2 #")\0"
139 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 1 #"e"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"lexer"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 6 #"lambda"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 2 #"cs"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"acc"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"cs"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"reverse"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"acc"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"      (("
7 #"wxtext\0"
3 9 #"make-pair"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"c"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"cr"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"       ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"acc"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"         ("
7 #"wxtext\0"
3 5 #"empty"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"lexer"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"cr"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"c"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"         (("
7 #"wxtext\0"
3 9 #"make-pair"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ar"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 3 #"let"
7 #"wxtext\0"
3 3 #" (("
7 #"wxtext\0"
3 2 #"ac"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"string-append"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"c"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 16 #"              (("
7 #"wxtext\0"
3 19 #"num-value-fragment?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ac"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"lexer"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"cr"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"make-pair"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ac"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ar"
7 #"wxtext\0"
3 5 #")))  "
7 #"wxtext\0"
3 15 #"; group numbers"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 16 #"              (("
7 #"wxtext\0"
3 18 #"var-name-fragment?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ac"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"lexer"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"cr"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"make-pair"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ac"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ar"
7 #"wxtext\0"
3 5 #")))  "
7 #"wxtext\0"
3 16 #"; group varnames"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 16 #"              (("
7 #"wxtext\0"
3 8 #"string=?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"c"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\" \""
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 5 #"lexer"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"cr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"acc"
7 #"wxtext\0"
3 4 #"))  "
7 #"wxtext\0"
3 13 #"; skip spaces"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 15 #"              ("
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"lexer"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"cr"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"make-pair"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"c"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"acc"
7 #"wxtext\0"
3 11 #")))))))))))"
0 10         107 21 2 #"(\0"
2 #")\0"
20 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 9 #"dd-parser"
7 #"wxtext\0"
3 3 #" (("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 2 #"->"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"tuple-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"term"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 4 #"))))"
0 10         202 21 2 #"(\0"
2 #")\0"
39 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 10 #"add-parser"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 6 #"lambda"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 4 #"    "
7 #"wxtext\0"
3 25 #"; <add> -> <mul> <add-to>"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"mul-parser"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"      (("
7 #"wxtext\0"
3 10 #"make-tuple"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"mul-term"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"       ("
7 #"wxtext\0"
3 13 #"add-to-parser"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"mul-term"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 5 #")))))"
0 10         122 21 2 #"(\0"
2 #")\0"
23 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"add-"
7 #"wxtext\0"
3 1 #"t"
7 #"wxtext\0"
3 8 #"o-parser"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"term"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 2 #"->"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"tuple-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"term"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 4 #"))))"
0 10         512 21 2 #"(\0"
2 #")\0"
101 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 5 #"defin"
7 #"wxtext\0"
3 1 #"e"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"add-to-parser"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 6 #"lambda"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"mul-term-left"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"      (("
7 #"wxtext\0"
3 9 #"make-pair"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"       ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"         "
7 #"wxtext\0"
3 33 #"; <add-to> -> [+-] <mul> <add-to>"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"         (("
7 #"wxtext\0"
3 2 #"or"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"string=?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"+\""
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 8 #"string=?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"-\""
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"mul-parser"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"            (("
7 #"wxtext\0"
3 10 #"make-tuple"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 14 #"mul-term-right"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"ts--"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 13 #"add-to-parser"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"make-binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"mul-term-left"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 14 #"mul-term-right"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"ts--"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"         "
7 #"wxtext\0"
3 16 #";           | \316\265"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"         ("
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"make-tuple"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"mul-term-left"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 1 #"_"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"make-tuple"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"mul-term-left"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
3 5 #")))))"
0 10         112 21 2 #"(\0"
2 #")\0"
21 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"mu"
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 7 #"-parser"
7 #"wxtext\0"
3 3 #" (("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 2 #"->"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"tuple-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"term"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 4 #"))))"
0 10         197 21 2 #"(\0"
2 #")\0"
38 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #"d"
7 #"wxtext\0"
3 5 #"efine"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 10 #"mul-parser"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 6 #"lambda"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 4 #"    "
7 #"wxtext\0"
3 25 #"; <mul> -> <pow> <mul-to>"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"pow-parser"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"      (("
7 #"wxtext\0"
3 10 #"make-tuple"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"pow-term"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"       ("
7 #"wxtext\0"
3 13 #"mul-to-parser"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"pow-term"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 5 #")))))"
0 10         122 21 2 #"(\0"
2 #")\0"
23 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"mul-"
7 #"wxtext\0"
3 1 #"t"
7 #"wxtext\0"
3 8 #"o-parser"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"term"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 2 #"->"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"tuple-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"term"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 4 #"))))"
0 10         517 21 2 #"(\0"
2 #")\0"
102 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"mul-to-parser"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 6 #"lambda"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"pow-term-left"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"      (("
7 #"wxtext\0"
3 9 #"make-pair"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"       ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"         "
7 #"wxtext\0"
3 33 #"; <mul-to> -> [*/] <pow> <mul-to>"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"         (("
7 #"wxtext\0"
3 2 #"or"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"string=?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"*\""
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 8 #"string=?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"/\""
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"pow-parser"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"            (("
7 #"wxtext\0"
3 10 #"make-tuple"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 14 #"pow-term-right"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"ts--"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 13 #"mul-to-parser"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"make-binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"pow-term-left"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 14 #"pow-term-right"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"ts--"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"         "
7 #"wxtext\0"
3 16 #";           | \316\265"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"         ("
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"make-tuple"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"pow-term-left"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 1 #"_"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"make-tuple"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"pow-term-left"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
3 5 #")))))"
0 10         112 21 2 #"(\0"
2 #")\0"
21 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"po"
7 #"wxtext\0"
3 1 #"w"
7 #"wxtext\0"
3 7 #"-parser"
7 #"wxtext\0"
3 3 #" (("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 2 #"->"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"tuple-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"term"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 4 #"))))"
0 10         197 21 2 #"(\0"
2 #")\0"
38 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 5 #"defin"
7 #"wxtext\0"
3 1 #"e"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 10 #"pow-parser"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 6 #"lambda"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 4 #"    "
7 #"wxtext\0"
3 27 #"; <pow> -> <unary> <pow-to>"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"unary-parser"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"      (("
7 #"wxtext\0"
3 10 #"make-tuple"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 10 #"unary-term"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"       ("
7 #"wxtext\0"
3 13 #"pow-to-parser"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 10 #"unary-term"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 5 #")))))"
0 10         117 21 2 #"(\0"
2 #")\0"
22 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"p"
7 #"wxtext\0"
3 12 #"ow-to-parser"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"term"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 2 #"->"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"tuple-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"term"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 4 #"))))"
0 10         372 21 2 #"(\0"
2 #")\0"
73 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 2 #"de"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 3 #"ine"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"pow-to-parser"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 6 #"lambda"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 15 #"unary-term-left"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"      "
7 #"wxtext\0"
3 32 #"; <pow-to> -> ^ <unary> <pow-to>"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"      (("
7 #"wxtext\0"
3 9 #"make-pair"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"^\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"       ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"unary-parser"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"         (("
7 #"wxtext\0"
3 10 #"make-tuple"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 16 #"unary-term-right"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"ts--"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 13 #"pow-to-parser"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"make-binop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"^\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 15 #"unary-term-left"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 16 #"unary-term-right"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"ts--"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"      "
7 #"wxtext\0"
3 16 #";           | \316\265"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 1 #"_"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"make-tuple"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 15 #"unary-term-left"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
3 5 #")))))"
0 10         102 21 2 #"(\0"
2 #")\0"
19 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 12 #"unary-parser"
7 #"wxtext\0"
3 3 #" (("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 2 #"->"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"tuple-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"term"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 4 #"))))"
0 10         477 21 2 #"(\0"
2 #")\0"
94 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"defi"
7 #"wxtext\0"
3 1 #"n"
7 #"wxtext\0"
3 1 #"e"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 12 #"unary-parser"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 6 #"lambda"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"      (("
7 #"wxtext\0"
3 9 #"make-pair"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"       ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"         "
7 #"wxtext\0"
3 26 #"; <unary> -> [\342\210\232-] <expr>"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"         (("
7 #"wxtext\0"
3 2 #"or"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"string=?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"\"\342\210\232\""
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 8 #"string=?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"-\""
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"expr-parser"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"            (("
7 #"wxtext\0"
3 10 #"make-tuple"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 9 #"expr-term"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"ts--"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 10 #"make-tuple"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"make-unop"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"op"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 9 #"expr-term"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 4 #"ts--"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"         "
7 #"wxtext\0"
3 19 #";          | <expr>"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"         ("
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"expr-parser"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 1 #"_"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"violation"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 35 #"\"parse error: end of input reached\""
7 #"wxtext\0"
3 5 #")))))"
0 10         107 21 2 #"(\0"
2 #")\0"
20 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #":"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"e"
7 #"wxtext\0"
3 10 #"xpr-parser"
7 #"wxtext\0"
3 3 #" (("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 2 #"->"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"tuple-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"term"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"list-of"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 4 #"))))"
0 10         807 21 2 #"(\0"
2 #")\0"
160 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 3 #"def"
7 #"wxtext\0"
3 1 #"i"
7 #"wxtext\0"
3 2 #"ne"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 11 #"expr-parser"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 6 #"lambda"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"ts"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 6 #"      "
7 #"wxtext\0"
3 21 #"; <expr> -> ( <add> )"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"      (("
7 #"wxtext\0"
3 9 #"make-pair"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\"(\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"       ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"add-parser"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"         (("
7 #"wxtext\0"
3 10 #"make-tuple"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"add-term"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"ts--"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 5 #"match"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"ts--"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"            (("
7 #"wxtext\0"
3 9 #"make-pair"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"\")\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"ts---"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"             ("
7 #"wxtext\0"
3 10 #"make-tuple"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"add-term"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"ts---"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"            (("
7 #"wxtext\0"
3 9 #"make-pair"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"t"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"_"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 9 #"violation"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"string-append"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 31 #"\"parse error: ) expected near \""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"t"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ("
7 #"wxtext\0"
3 1 #"_"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"violation"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 35 #"\"parse error: end of input reached\""
7 #"wxtext\0"
3 6 #"))))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"      (("
7 #"wxtext\0"
3 9 #"make-pair"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"t"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"       ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"         "
7 #"wxtext\0"
3 17 #";         | <num>"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"         (("
7 #"wxtext\0"
3 19 #"num-value-fragment?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"t"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 10 #"make-tuple"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"make-num"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 14 #"string->number"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"t"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"         "
7 #"wxtext\0"
3 17 #";         | <var>"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"         (("
7 #"wxtext\0"
3 18 #"var-name-fragment?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"t"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 10 #"make-tuple"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"make-var"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"t"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 3 #"ts-"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"         ("
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"violation"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"string-append"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 51 #"\"parse error: expected variable, number or ( near \""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"t"
7 #"wxtext\0"
3 5 #")))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 7 #"      ("
7 #"wxtext\0"
3 1 #"_"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"violation"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 35 #"\"parse error: end of input reached\""
7 #"wxtext\0"
3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 93
(14
 #"; Pretty Printer: Gibt einen Ausdruck in menschenlesbarer Form aus, d"
 #"abei gilt (f\xC3\xBCr g\xC3\xBCltige"
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #"; Ausdr\303\274cke"
0 0 17 3 19 #" mit vollst\303\244ndiger"
0 0 17 3 1 #" "
0 0 17 3 10 #"Klammerung"
0 0 17 3 1 #")"
0 0 17 3 1 #":"
0 0 17 3 2 #" ("
0 0 17 3 16 #"term-prettyprint"
0 0 17 3 2 #" ("
0 0 17 3 10 #"term-parse"
0 0 17 3 1 #" "
0 0 17 3 7 #"s)) = s"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 16 #"term-prettyprint"
0 0 24 3 2 #" ("
0 0 14 3 4 #"term"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 6 #"string"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"term-prettyprint"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 8 #"make-num"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 8 #"make-var"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #") "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 9 #"make-unop"
0 0 24 3 1 #" "
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 1 #" "
0 0 14 3 2 #"op"
0 0 24 3 2 #" ("
0 0 14 3 16 #"term-prettyprint"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 10 #"make-binop"
0 0 24 3 1 #" "
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 2 #" ("
0 0 14 3 16 #"term-prettyprint"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 14 3 2 #"op"
0 0 24 3 2 #" ("
0 0 14 3 16 #"term-prettyprint"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; Einige Testf\303\244lle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"term-parse"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"2 * -a\""
0 0 24 3 2 #") "
0 0 14 3 5 #"term1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"term-parse"
0 0 24 3 1 #" "
0 0 19 3 30 #"\"(4 * 10 + 2) / (a - (1 + a))\""
0 0 24 3 2 #") "
0 0 14 3 5 #"term2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"term-prettyprint"
0 0 24 3 2 #" ("
0 0 14 3 10 #"term-parse"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"1 + 2*3\""
0 0 24 3 3 #")) "
0 0 19 3 11 #"\"(1+(2*3))\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"term-prettyprint"
0 0 24 3 2 #" ("
0 0 14 3 10 #"term-parse"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"2 * 3^2 * 3\""
0 0 24 3 3 #")) "
0 0 19 3 15 #"\"((2*(3^2))*3)\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"term-prettyprint"
0 0 24 3 2 #" ("
0 0 14 3 10 #"term-parse"
0 0 24 3 1 #" "
0 0 19 3 36 #"\"-(\342\210\232(-3 + 1.25))^(3 + s * -h / 2)\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 19 3 40 #"\"((-(\342\210\232((-3)+1.25)))^(3+((s*(-h))/2)))\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";;; EIGENE LOESUNG AB HIER"
0 0 24 29 1 #"\n"
0           0
